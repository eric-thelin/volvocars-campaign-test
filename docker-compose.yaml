# To execute this docker-compose yml file use `docker-compose -f docker-compose-v2.yml up`
# Add the `-d` flag at the end for detached execution
# To stop the execution, hit Ctrl+C, and then `docker-compose -f docker-compose-v2.yml down`
version: '3'
services:
    chrome:
        image: seleniarm/node-chromium:108.0-chromedriver-108.0-grid-4.7.2-20230102
        shm_size: 2gb
        depends_on:
            - selenium-hub
        environment:
            - SE_EVENT_BUS_HOST=selenium-hub
            - SE_EVENT_BUS_PUBLISH_PORT=4442
            - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
        deploy:
            replicas: 3
        ports:
            - "6900-6902:5900"
    firefox:
        image: seleniarm/node-firefox:108.0-geckodriver-0.32.0-grid-4.7.2-20230102
        shm_size: 2gb
        depends_on:
            - selenium-hub
        environment:
            - SE_EVENT_BUS_HOST=selenium-hub
            - SE_EVENT_BUS_PUBLISH_PORT=4442
            - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
        deploy:
            replicas: 3
        ports:
            - "6910-6912:5900"
    selenium-hub:
        image: seleniarm/hub:4.7.2-20230102
        ports:
            - "4442:4442"
            - "4443:4443"
            - "4444:4444"
    test:
        build:
            dockerfile: Dockerfile
            context: .
        volumes:
            - ./allure-results:/app/allure-results
        environment:
            - "WDIO_AUTOMATION_PROTOCOL=webdriver"
            - "WDIO_SERVER_HOSTNAME=selenium-hub"
        command: "sleep infinity"

    allure:
        image: pradapjackie/allure-reports-generation:1.0
        volumes:
            - ./allure-results:/app/allure-results
            - ./allure-report:/app/allure-report
        ports:
            - "8080:8080"
        command: "bash -c 'allure generate --clean /app/allure-results && allure open --port 8080 /app/allure-report'"
